type Document {
  uuid: ID
  protocol: String
  file: File
  pages: [String]
  author: User
  reviser: User
  responsable: User
  organization: Organization
  canceledAt: String
  forwardedAt: String
  publishedAt: String
  updatedAt: String
  createdAt: String
}

input DocumentFieldsInput {
  uuid: ID
}

type DocumentResultSuccess {
  total: Int
  perPage: Int
  page: Int
  lastPage: Int
  data: [Document]
}

type Query {
  getAllDocuments(
    organization: OrganizationFieldsInput
    user: UserFieldsInput
    page: Int
    perPage: Int
  ): DocumentResultSuccess

  getDocument(
    organization: OrganizationFieldsInput
    document: DocumentFieldsInput
  ): Document

  documentsForAnalysis(
    page: Int
    perPage: Int
  ): DocumentResultSuccess

  sentDocuments(
    page: Int
    perPage: Int
  ): DocumentResultSuccess
}

## Mutation
#
input DocumentUpdateInput {
  reviser: UserInput
  publishedAt: String
  canceledAt: String
  forwardedAt: String
}

type Mutation {
  sendDocument(document: DocumentFieldsInput!): Document
}
